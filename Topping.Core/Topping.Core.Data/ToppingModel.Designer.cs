//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Topping.Core.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ToppingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ToppingEntities object using the connection string found in the 'ToppingEntities' section of the application configuration file.
        /// </summary>
        public ToppingEntities() : base("name=ToppingEntities", "ToppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ToppingEntities object.
        /// </summary>
        public ToppingEntities(string connectionString) : base(connectionString, "ToppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ToppingEntities object.
        /// </summary>
        public ToppingEntities(EntityConnection connection) : base(connection, "ToppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameConfig> GameConfigs
        {
            get
            {
                if ((_GameConfigs == null))
                {
                    _GameConfigs = base.CreateObjectSet<GameConfig>("GameConfigs");
                }
                return _GameConfigs;
            }
        }
        private ObjectSet<GameConfig> _GameConfigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameRanking> GameRankings
        {
            get
            {
                if ((_GameRankings == null))
                {
                    _GameRankings = base.CreateObjectSet<GameRanking>("GameRankings");
                }
                return _GameRankings;
            }
        }
        private ObjectSet<GameRanking> _GameRankings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewUserIdAndName> ViewUserIdAndNames
        {
            get
            {
                if ((_ViewUserIdAndNames == null))
                {
                    _ViewUserIdAndNames = base.CreateObjectSet<ViewUserIdAndName>("ViewUserIdAndNames");
                }
                return _ViewUserIdAndNames;
            }
        }
        private ObjectSet<ViewUserIdAndName> _ViewUserIdAndNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GamesDetail> GamesDetails
        {
            get
            {
                if ((_GamesDetails == null))
                {
                    _GamesDetails = base.CreateObjectSet<GamesDetail>("GamesDetails");
                }
                return _GamesDetails;
            }
        }
        private ObjectSet<GamesDetail> _GamesDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewGetRanking> ViewGetRankings
        {
            get
            {
                if ((_ViewGetRankings == null))
                {
                    _ViewGetRankings = base.CreateObjectSet<ViewGetRanking>("ViewGetRankings");
                }
                return _ViewGetRankings;
            }
        }
        private ObjectSet<ViewGetRanking> _ViewGetRankings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewGetGameDetail> ViewGetGameDetails
        {
            get
            {
                if ((_ViewGetGameDetails == null))
                {
                    _ViewGetGameDetails = base.CreateObjectSet<ViewGetGameDetail>("ViewGetGameDetails");
                }
                return _ViewGetGameDetails;
            }
        }
        private ObjectSet<ViewGetGameDetail> _ViewGetGameDetails;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameConfigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameConfigs(GameConfig gameConfig)
        {
            base.AddObject("GameConfigs", gameConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameRankings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameRankings(GameRanking gameRanking)
        {
            base.AddObject("GameRankings", gameRanking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewUserIdAndNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewUserIdAndNames(ViewUserIdAndName viewUserIdAndName)
        {
            base.AddObject("ViewUserIdAndNames", viewUserIdAndName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamesDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamesDetails(GamesDetail gamesDetail)
        {
            base.AddObject("GamesDetails", gamesDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewGetRankings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewGetRankings(ViewGetRanking viewGetRanking)
        {
            base.AddObject("ViewGetRankings", viewGetRanking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewGetGameDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewGetGameDetails(ViewGetGameDetail viewGetGameDetail)
        {
            base.AddObject("ViewGetGameDetails", viewGetGameDetail);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="gameConfigId">Initial value of the GameConfigId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="gameXml">Initial value of the GameXml property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Game CreateGame(global::System.Guid gameId, global::System.Guid gameConfigId, global::System.DateTime date, global::System.Int64 status, global::System.String gameXml, global::System.String name)
        {
            Game game = new Game();
            game.GameId = gameId;
            game.GameConfigId = gameConfigId;
            game.Date = date;
            game.Status = status;
            game.GameXml = gameXml;
            game.Name = name;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Guid _GameId;
        partial void OnGameIdChanging(global::System.Guid value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameConfigId
        {
            get
            {
                return _GameConfigId;
            }
            set
            {
                OnGameConfigIdChanging(value);
                ReportPropertyChanging("GameConfigId");
                _GameConfigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameConfigId");
                OnGameConfigIdChanged();
            }
        }
        private global::System.Guid _GameConfigId;
        partial void OnGameConfigIdChanging(global::System.Guid value);
        partial void OnGameConfigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int64 _Status;
        partial void OnStatusChanging(global::System.Int64 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GameXml
        {
            get
            {
                return _GameXml;
            }
            set
            {
                OnGameXmlChanging(value);
                ReportPropertyChanging("GameXml");
                _GameXml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GameXml");
                OnGameXmlChanged();
            }
        }
        private global::System.String _GameXml;
        partial void OnGameXmlChanging(global::System.String value);
        partial void OnGameXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="GameConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameConfig object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GameConfig CreateGameConfig(global::System.Guid id)
        {
            GameConfig gameConfig = new GameConfig();
            gameConfig.Id = id;
            return gameConfig;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XmlConfig
        {
            get
            {
                return _XmlConfig;
            }
            set
            {
                OnXmlConfigChanging(value);
                ReportPropertyChanging("XmlConfig");
                _XmlConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XmlConfig");
                OnXmlConfigChanged();
            }
        }
        private global::System.String _XmlConfig;
        partial void OnXmlConfigChanging(global::System.String value);
        partial void OnXmlConfigChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="GameRanking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameRanking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameRanking object.
        /// </summary>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="configGameId">Initial value of the ConfigGameId property.</param>
        /// <param name="playerid">Initial value of the Playerid property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        /// <param name="nbParties">Initial value of the NbParties property.</param>
        /// <param name="lostTops">Initial value of the LostTops property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="totalTops">Initial value of the TotalTops property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="serie">Initial value of the Serie property.</param>
        /// <param name="playerTop">Initial value of the PlayerTop property.</param>
        /// <param name="gameTop">Initial value of the GameTop property.</param>
        /// <param name="selection">Initial value of the Selection property.</param>
        /// <param name="bestTime">Initial value of the BestTime property.</param>
        /// <param name="bestScore">Initial value of the BestScore property.</param>
        public static GameRanking CreateGameRanking(global::System.Int32 year, global::System.Int32 month, global::System.Guid configGameId, global::System.Guid playerid, global::System.Double percentage, global::System.Int32 nbParties, global::System.Double lostTops, global::System.Int32 time, global::System.Int32 totalTops, global::System.Int32 position, global::System.Int32 serie, global::System.Int32 playerTop, global::System.Int32 gameTop, global::System.Int32 selection, global::System.Int32 bestTime, global::System.Double bestScore)
        {
            GameRanking gameRanking = new GameRanking();
            gameRanking.Year = year;
            gameRanking.Month = month;
            gameRanking.ConfigGameId = configGameId;
            gameRanking.Playerid = playerid;
            gameRanking.Percentage = percentage;
            gameRanking.NbParties = nbParties;
            gameRanking.LostTops = lostTops;
            gameRanking.Time = time;
            gameRanking.TotalTops = totalTops;
            gameRanking.Position = position;
            gameRanking.Serie = serie;
            gameRanking.PlayerTop = playerTop;
            gameRanking.GameTop = gameTop;
            gameRanking.Selection = selection;
            gameRanking.BestTime = bestTime;
            gameRanking.BestScore = bestScore;
            return gameRanking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                if (_Month != value)
                {
                    OnMonthChanging(value);
                    ReportPropertyChanging("Month");
                    _Month = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Month");
                    OnMonthChanged();
                }
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConfigGameId
        {
            get
            {
                return _ConfigGameId;
            }
            set
            {
                if (_ConfigGameId != value)
                {
                    OnConfigGameIdChanging(value);
                    ReportPropertyChanging("ConfigGameId");
                    _ConfigGameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigGameId");
                    OnConfigGameIdChanged();
                }
            }
        }
        private global::System.Guid _ConfigGameId;
        partial void OnConfigGameIdChanging(global::System.Guid value);
        partial void OnConfigGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Playerid
        {
            get
            {
                return _Playerid;
            }
            set
            {
                if (_Playerid != value)
                {
                    OnPlayeridChanging(value);
                    ReportPropertyChanging("Playerid");
                    _Playerid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Playerid");
                    OnPlayeridChanged();
                }
            }
        }
        private global::System.Guid _Playerid;
        partial void OnPlayeridChanging(global::System.Guid value);
        partial void OnPlayeridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Double _Percentage;
        partial void OnPercentageChanging(global::System.Double value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NbParties
        {
            get
            {
                return _NbParties;
            }
            set
            {
                OnNbPartiesChanging(value);
                ReportPropertyChanging("NbParties");
                _NbParties = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NbParties");
                OnNbPartiesChanged();
            }
        }
        private global::System.Int32 _NbParties;
        partial void OnNbPartiesChanging(global::System.Int32 value);
        partial void OnNbPartiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LostTops
        {
            get
            {
                return _LostTops;
            }
            set
            {
                OnLostTopsChanging(value);
                ReportPropertyChanging("LostTops");
                _LostTops = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostTops");
                OnLostTopsChanged();
            }
        }
        private global::System.Double _LostTops;
        partial void OnLostTopsChanging(global::System.Double value);
        partial void OnLostTopsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.Int32 _Time;
        partial void OnTimeChanging(global::System.Int32 value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalTops
        {
            get
            {
                return _TotalTops;
            }
            set
            {
                OnTotalTopsChanging(value);
                ReportPropertyChanging("TotalTops");
                _TotalTops = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalTops");
                OnTotalTopsChanged();
            }
        }
        private global::System.Int32 _TotalTops;
        partial void OnTotalTopsChanging(global::System.Int32 value);
        partial void OnTotalTopsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Serie
        {
            get
            {
                return _Serie;
            }
            set
            {
                OnSerieChanging(value);
                ReportPropertyChanging("Serie");
                _Serie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Serie");
                OnSerieChanged();
            }
        }
        private global::System.Int32 _Serie;
        partial void OnSerieChanging(global::System.Int32 value);
        partial void OnSerieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerTop
        {
            get
            {
                return _PlayerTop;
            }
            set
            {
                OnPlayerTopChanging(value);
                ReportPropertyChanging("PlayerTop");
                _PlayerTop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerTop");
                OnPlayerTopChanged();
            }
        }
        private global::System.Int32 _PlayerTop;
        partial void OnPlayerTopChanging(global::System.Int32 value);
        partial void OnPlayerTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameTop
        {
            get
            {
                return _GameTop;
            }
            set
            {
                OnGameTopChanging(value);
                ReportPropertyChanging("GameTop");
                _GameTop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameTop");
                OnGameTopChanged();
            }
        }
        private global::System.Int32 _GameTop;
        partial void OnGameTopChanging(global::System.Int32 value);
        partial void OnGameTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                OnSelectionChanging(value);
                ReportPropertyChanging("Selection");
                _Selection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Selection");
                OnSelectionChanged();
            }
        }
        private global::System.Int32 _Selection;
        partial void OnSelectionChanging(global::System.Int32 value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BestTime
        {
            get
            {
                return _BestTime;
            }
            set
            {
                OnBestTimeChanging(value);
                ReportPropertyChanging("BestTime");
                _BestTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BestTime");
                OnBestTimeChanged();
            }
        }
        private global::System.Int32 _BestTime;
        partial void OnBestTimeChanging(global::System.Int32 value);
        partial void OnBestTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BestScore
        {
            get
            {
                return _BestScore;
            }
            set
            {
                OnBestScoreChanging(value);
                ReportPropertyChanging("BestScore");
                _BestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BestScore");
                OnBestScoreChanged();
            }
        }
        private global::System.Double _BestScore;
        partial void OnBestScoreChanging(global::System.Double value);
        partial void OnBestScoreChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="GamesDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GamesDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GamesDetail object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static GamesDetail CreateGamesDetail(global::System.Guid gameId, global::System.Guid userId, global::System.DateTime date)
        {
            GamesDetail gamesDetail = new GamesDetail();
            gamesDetail.GameId = gameId;
            gamesDetail.UserId = userId;
            gamesDetail.Date = date;
            return gamesDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Guid _GameId;
        partial void OnGameIdChanging(global::System.Guid value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DetailXml
        {
            get
            {
                return _DetailXml;
            }
            set
            {
                OnDetailXmlChanging(value);
                ReportPropertyChanging("DetailXml");
                _DetailXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DetailXml");
                OnDetailXmlChanged();
            }
        }
        private global::System.String _DetailXml;
        partial void OnDetailXmlChanging(global::System.String value);
        partial void OnDetailXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Int64> _Total;
        partial void OnTotalChanging(Nullable<global::System.Int64> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Solos
        {
            get
            {
                return _Solos;
            }
            set
            {
                OnSolosChanging(value);
                ReportPropertyChanging("Solos");
                _Solos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solos");
                OnSolosChanged();
            }
        }
        private Nullable<global::System.Int64> _Solos;
        partial void OnSolosChanging(Nullable<global::System.Int64> value);
        partial void OnSolosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Warnings
        {
            get
            {
                return _Warnings;
            }
            set
            {
                OnWarningsChanging(value);
                ReportPropertyChanging("Warnings");
                _Warnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Warnings");
                OnWarningsChanged();
            }
        }
        private Nullable<global::System.Int64> _Warnings;
        partial void OnWarningsChanging(Nullable<global::System.Int64> value);
        partial void OnWarningsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.Int64> _Time;
        partial void OnTimeChanging(Nullable<global::System.Int64> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Double> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TopLost
        {
            get
            {
                return _TopLost;
            }
            set
            {
                OnTopLostChanging(value);
                ReportPropertyChanging("TopLost");
                _TopLost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopLost");
                OnTopLostChanged();
            }
        }
        private Nullable<global::System.Int64> _TopLost;
        partial void OnTopLostChanging(Nullable<global::System.Int64> value);
        partial void OnTopLostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Top
        {
            get
            {
                return _Top;
            }
            set
            {
                OnTopChanging(value);
                ReportPropertyChanging("Top");
                _Top = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Top");
                OnTopChanged();
            }
        }
        private Nullable<global::System.Int64> _Top;
        partial void OnTopChanging(Nullable<global::System.Int64> value);
        partial void OnTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Negative
        {
            get
            {
                return _Negative;
            }
            set
            {
                OnNegativeChanging(value);
                ReportPropertyChanging("Negative");
                _Negative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Negative");
                OnNegativeChanged();
            }
        }
        private Nullable<global::System.Int64> _Negative;
        partial void OnNegativeChanging(Nullable<global::System.Int64> value);
        partial void OnNegativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                OnSelectionChanging(value);
                ReportPropertyChanging("Selection");
                _Selection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Selection");
                OnSelectionChanged();
            }
        }
        private Nullable<global::System.Int64> _Selection;
        partial void OnSelectionChanging(Nullable<global::System.Int64> value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int64> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int64> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int64> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="pKID">Initial value of the PKID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static user Createuser(global::System.Guid pKID, global::System.String username)
        {
            user user = new user();
            user.PKID = pKID;
            user.Username = username;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PKID
        {
            get
            {
                return _PKID;
            }
            set
            {
                if (_PKID != value)
                {
                    OnPKIDChanging(value);
                    ReportPropertyChanging("PKID");
                    _PKID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PKID");
                    OnPKIDChanged();
                }
            }
        }
        private global::System.Guid _PKID;
        partial void OnPKIDChanging(global::System.Guid value);
        partial void OnPKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Byte> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsOnLine
        {
            get
            {
                return _IsOnLine;
            }
            set
            {
                OnIsOnLineChanging(value);
                ReportPropertyChanging("IsOnLine");
                _IsOnLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnLine");
                OnIsOnLineChanged();
            }
        }
        private Nullable<global::System.Byte> _IsOnLine;
        partial void OnIsOnLineChanging(Nullable<global::System.Byte> value);
        partial void OnIsOnLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private Nullable<global::System.Byte> _IsLockedOut;
        partial void OnIsLockedOutChanging(Nullable<global::System.Byte> value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLockedOutDate
        {
            get
            {
                return _LastLockedOutDate;
            }
            set
            {
                OnLastLockedOutDateChanging(value);
                ReportPropertyChanging("LastLockedOutDate");
                _LastLockedOutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockedOutDate");
                OnLastLockedOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLockedOutDate;
        partial void OnLastLockedOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLockedOutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(Nullable<global::System.Int32> value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="ViewGetGameDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewGetGameDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewGetGameDetail object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="gameConfigId">Initial value of the GameConfigId property.</param>
        public static ViewGetGameDetail CreateViewGetGameDetail(global::System.String username, global::System.Guid gameId, global::System.Guid userId, global::System.DateTime date, global::System.Guid gameConfigId)
        {
            ViewGetGameDetail viewGetGameDetail = new ViewGetGameDetail();
            viewGetGameDetail.Username = username;
            viewGetGameDetail.GameId = gameId;
            viewGetGameDetail.UserId = userId;
            viewGetGameDetail.Date = date;
            viewGetGameDetail.GameConfigId = gameConfigId;
            return viewGetGameDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Guid _GameId;
        partial void OnGameIdChanging(global::System.Guid value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Int64> _Total;
        partial void OnTotalChanging(Nullable<global::System.Int64> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Solos
        {
            get
            {
                return _Solos;
            }
            set
            {
                OnSolosChanging(value);
                ReportPropertyChanging("Solos");
                _Solos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solos");
                OnSolosChanged();
            }
        }
        private Nullable<global::System.Int64> _Solos;
        partial void OnSolosChanging(Nullable<global::System.Int64> value);
        partial void OnSolosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Warnings
        {
            get
            {
                return _Warnings;
            }
            set
            {
                OnWarningsChanging(value);
                ReportPropertyChanging("Warnings");
                _Warnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Warnings");
                OnWarningsChanged();
            }
        }
        private Nullable<global::System.Int64> _Warnings;
        partial void OnWarningsChanging(Nullable<global::System.Int64> value);
        partial void OnWarningsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.Int64> _Time;
        partial void OnTimeChanging(Nullable<global::System.Int64> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Double> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TopLost
        {
            get
            {
                return _TopLost;
            }
            set
            {
                OnTopLostChanging(value);
                ReportPropertyChanging("TopLost");
                _TopLost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopLost");
                OnTopLostChanged();
            }
        }
        private Nullable<global::System.Int64> _TopLost;
        partial void OnTopLostChanging(Nullable<global::System.Int64> value);
        partial void OnTopLostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Top
        {
            get
            {
                return _Top;
            }
            set
            {
                OnTopChanging(value);
                ReportPropertyChanging("Top");
                _Top = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Top");
                OnTopChanged();
            }
        }
        private Nullable<global::System.Int64> _Top;
        partial void OnTopChanging(Nullable<global::System.Int64> value);
        partial void OnTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Negative
        {
            get
            {
                return _Negative;
            }
            set
            {
                OnNegativeChanging(value);
                ReportPropertyChanging("Negative");
                _Negative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Negative");
                OnNegativeChanged();
            }
        }
        private Nullable<global::System.Int64> _Negative;
        partial void OnNegativeChanging(Nullable<global::System.Int64> value);
        partial void OnNegativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                OnSelectionChanging(value);
                ReportPropertyChanging("Selection");
                _Selection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Selection");
                OnSelectionChanged();
            }
        }
        private Nullable<global::System.Int64> _Selection;
        partial void OnSelectionChanging(Nullable<global::System.Int64> value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int64> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int64> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int64> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameConfigId
        {
            get
            {
                return _GameConfigId;
            }
            set
            {
                if (_GameConfigId != value)
                {
                    OnGameConfigIdChanging(value);
                    ReportPropertyChanging("GameConfigId");
                    _GameConfigId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameConfigId");
                    OnGameConfigIdChanged();
                }
            }
        }
        private global::System.Guid _GameConfigId;
        partial void OnGameConfigIdChanging(global::System.Guid value);
        partial void OnGameConfigIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="ViewGetRanking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewGetRanking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewGetRanking object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="configGameId">Initial value of the ConfigGameId property.</param>
        /// <param name="playerid">Initial value of the Playerid property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        /// <param name="nbParties">Initial value of the NbParties property.</param>
        /// <param name="lostTops">Initial value of the LostTops property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="totalTops">Initial value of the TotalTops property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="serie">Initial value of the Serie property.</param>
        /// <param name="playerTop">Initial value of the PlayerTop property.</param>
        /// <param name="gameTop">Initial value of the GameTop property.</param>
        /// <param name="selection">Initial value of the Selection property.</param>
        /// <param name="bestTime">Initial value of the BestTime property.</param>
        /// <param name="bestScore">Initial value of the BestScore property.</param>
        public static ViewGetRanking CreateViewGetRanking(global::System.String username, global::System.Int32 year, global::System.Int32 month, global::System.Guid configGameId, global::System.Guid playerid, global::System.Double percentage, global::System.Int32 nbParties, global::System.Double lostTops, global::System.Int32 time, global::System.Int32 totalTops, global::System.Int32 position, global::System.Int32 serie, global::System.Int32 playerTop, global::System.Int32 gameTop, global::System.Int32 selection, global::System.Int32 bestTime, global::System.Double bestScore)
        {
            ViewGetRanking viewGetRanking = new ViewGetRanking();
            viewGetRanking.Username = username;
            viewGetRanking.Year = year;
            viewGetRanking.Month = month;
            viewGetRanking.ConfigGameId = configGameId;
            viewGetRanking.Playerid = playerid;
            viewGetRanking.Percentage = percentage;
            viewGetRanking.NbParties = nbParties;
            viewGetRanking.LostTops = lostTops;
            viewGetRanking.Time = time;
            viewGetRanking.TotalTops = totalTops;
            viewGetRanking.Position = position;
            viewGetRanking.Serie = serie;
            viewGetRanking.PlayerTop = playerTop;
            viewGetRanking.GameTop = gameTop;
            viewGetRanking.Selection = selection;
            viewGetRanking.BestTime = bestTime;
            viewGetRanking.BestScore = bestScore;
            return viewGetRanking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                if (_Month != value)
                {
                    OnMonthChanging(value);
                    ReportPropertyChanging("Month");
                    _Month = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Month");
                    OnMonthChanged();
                }
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConfigGameId
        {
            get
            {
                return _ConfigGameId;
            }
            set
            {
                if (_ConfigGameId != value)
                {
                    OnConfigGameIdChanging(value);
                    ReportPropertyChanging("ConfigGameId");
                    _ConfigGameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigGameId");
                    OnConfigGameIdChanged();
                }
            }
        }
        private global::System.Guid _ConfigGameId;
        partial void OnConfigGameIdChanging(global::System.Guid value);
        partial void OnConfigGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Playerid
        {
            get
            {
                return _Playerid;
            }
            set
            {
                if (_Playerid != value)
                {
                    OnPlayeridChanging(value);
                    ReportPropertyChanging("Playerid");
                    _Playerid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Playerid");
                    OnPlayeridChanged();
                }
            }
        }
        private global::System.Guid _Playerid;
        partial void OnPlayeridChanging(global::System.Guid value);
        partial void OnPlayeridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                if (_Percentage != value)
                {
                    OnPercentageChanging(value);
                    ReportPropertyChanging("Percentage");
                    _Percentage = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Percentage");
                    OnPercentageChanged();
                }
            }
        }
        private global::System.Double _Percentage;
        partial void OnPercentageChanging(global::System.Double value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NbParties
        {
            get
            {
                return _NbParties;
            }
            set
            {
                if (_NbParties != value)
                {
                    OnNbPartiesChanging(value);
                    ReportPropertyChanging("NbParties");
                    _NbParties = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NbParties");
                    OnNbPartiesChanged();
                }
            }
        }
        private global::System.Int32 _NbParties;
        partial void OnNbPartiesChanging(global::System.Int32 value);
        partial void OnNbPartiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LostTops
        {
            get
            {
                return _LostTops;
            }
            set
            {
                if (_LostTops != value)
                {
                    OnLostTopsChanging(value);
                    ReportPropertyChanging("LostTops");
                    _LostTops = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LostTops");
                    OnLostTopsChanged();
                }
            }
        }
        private global::System.Double _LostTops;
        partial void OnLostTopsChanging(global::System.Double value);
        partial void OnLostTopsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Time
        {
            get
            {
                return _Time;
            }
            set
            {
                if (_Time != value)
                {
                    OnTimeChanging(value);
                    ReportPropertyChanging("Time");
                    _Time = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Time");
                    OnTimeChanged();
                }
            }
        }
        private global::System.Int32 _Time;
        partial void OnTimeChanging(global::System.Int32 value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalTops
        {
            get
            {
                return _TotalTops;
            }
            set
            {
                if (_TotalTops != value)
                {
                    OnTotalTopsChanging(value);
                    ReportPropertyChanging("TotalTops");
                    _TotalTops = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TotalTops");
                    OnTotalTopsChanged();
                }
            }
        }
        private global::System.Int32 _TotalTops;
        partial void OnTotalTopsChanging(global::System.Int32 value);
        partial void OnTotalTopsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    OnPositionChanging(value);
                    ReportPropertyChanging("Position");
                    _Position = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Position");
                    OnPositionChanged();
                }
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Serie
        {
            get
            {
                return _Serie;
            }
            set
            {
                if (_Serie != value)
                {
                    OnSerieChanging(value);
                    ReportPropertyChanging("Serie");
                    _Serie = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Serie");
                    OnSerieChanged();
                }
            }
        }
        private global::System.Int32 _Serie;
        partial void OnSerieChanging(global::System.Int32 value);
        partial void OnSerieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerTop
        {
            get
            {
                return _PlayerTop;
            }
            set
            {
                if (_PlayerTop != value)
                {
                    OnPlayerTopChanging(value);
                    ReportPropertyChanging("PlayerTop");
                    _PlayerTop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerTop");
                    OnPlayerTopChanged();
                }
            }
        }
        private global::System.Int32 _PlayerTop;
        partial void OnPlayerTopChanging(global::System.Int32 value);
        partial void OnPlayerTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameTop
        {
            get
            {
                return _GameTop;
            }
            set
            {
                if (_GameTop != value)
                {
                    OnGameTopChanging(value);
                    ReportPropertyChanging("GameTop");
                    _GameTop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameTop");
                    OnGameTopChanged();
                }
            }
        }
        private global::System.Int32 _GameTop;
        partial void OnGameTopChanging(global::System.Int32 value);
        partial void OnGameTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                if (_Selection != value)
                {
                    OnSelectionChanging(value);
                    ReportPropertyChanging("Selection");
                    _Selection = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Selection");
                    OnSelectionChanged();
                }
            }
        }
        private global::System.Int32 _Selection;
        partial void OnSelectionChanging(global::System.Int32 value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BestTime
        {
            get
            {
                return _BestTime;
            }
            set
            {
                if (_BestTime != value)
                {
                    OnBestTimeChanging(value);
                    ReportPropertyChanging("BestTime");
                    _BestTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BestTime");
                    OnBestTimeChanged();
                }
            }
        }
        private global::System.Int32 _BestTime;
        partial void OnBestTimeChanging(global::System.Int32 value);
        partial void OnBestTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BestScore
        {
            get
            {
                return _BestScore;
            }
            set
            {
                if (_BestScore != value)
                {
                    OnBestScoreChanging(value);
                    ReportPropertyChanging("BestScore");
                    _BestScore = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BestScore");
                    OnBestScoreChanged();
                }
            }
        }
        private global::System.Double _BestScore;
        partial void OnBestScoreChanging(global::System.Double value);
        partial void OnBestScoreChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToppingModel", Name="ViewUserIdAndName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewUserIdAndName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewUserIdAndName object.
        /// </summary>
        /// <param name="pKID">Initial value of the PKID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static ViewUserIdAndName CreateViewUserIdAndName(global::System.Guid pKID, global::System.String username)
        {
            ViewUserIdAndName viewUserIdAndName = new ViewUserIdAndName();
            viewUserIdAndName.PKID = pKID;
            viewUserIdAndName.Username = username;
            return viewUserIdAndName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PKID
        {
            get
            {
                return _PKID;
            }
            set
            {
                if (_PKID != value)
                {
                    OnPKIDChanging(value);
                    ReportPropertyChanging("PKID");
                    _PKID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PKID");
                    OnPKIDChanged();
                }
            }
        }
        private global::System.Guid _PKID;
        partial void OnPKIDChanging(global::System.Guid value);
        partial void OnPKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion
    
    }

    #endregion
    
}
